div[class*='item'] {
  display: flex;
  justify-content: center;
  align-items: center;
}
div[style*='grid-column'] {
  display: flex;
  justify-content: center;
  align-items: center;
}
/*! display
Defines the element as a grid container and establishes a new grid formatting context for its contents.
Values:
grid – generates a block-level grid
inline-grid – generates an inline-level grid */

.container {
  display: grid;
  /* | inline-grid; */
}

/*! grid-template-columns
grid-template-rows
Defines the columns and rows of the grid with a space-separated list of values. The values represent the track size, and the space between them represents the grid line.
Values:
<track-size> – can be a length, a percentage, or a fraction of the free space in the grid (using the fr unit)
<line-name> – an arbitrary name of your choosing */

.container_1 {
  /* visibility: hidden; */
  display: grid;
  /* width: 100%; */
  /* height: 850px; */
  grid-template-columns: 40px 50px auto 50px 40px;
  grid-template-rows: 100px 100px minmax(0, 1fr);
  background-color: burlywood;
  border: 1px solid black;
  /* word-wrap: break-word;
  overflow-wrap: break-word; */
  /* overflow: auto; */
}

/** Names */
.container_2 {
  display: grid;
  background-color: burlywood;
  border: 1px solid black;
  max-height: 100vh;
  grid-template-columns: [first] 40px [line2] 50px [line3] auto [col4-start] 50px [five] 40px [end];
  grid-template-rows: [row1-start] 25% [row1-end] 100px [third-line] minmax(0, 1fr) [last-line];
}
/** Multiple name lines  */
.container_3 {
  display: grid;
  grid-template-rows: [row1-start] 25% [row1-end row2-start] 25% [row2-end];
}

/** Repeat */
.container_4 {
  display: grid;
  grid-template-columns: repeat(3, 20px [col-start]);
}

.item_1 {
  grid-column: 1 / 2;
  grid-row: 1 / 2;
  background-color: green;
}

.item_2 {
  grid-column: 2 / 3;
  grid-row: 2 / 3;
  background-color: greenyellow;
}
.item_3 {
  grid-column: 3 / 4;
  grid-row: 3 / 4;
  background-color: hotpink;
  /* min-height: auto; */
  /* min-height: visible; */
  /* overflow: auto; */
  /* min-width: 0; NEW; needed for Firefox */
}

.item_4 {
  grid-column: 4 / 5;
  grid-row: 2 / 3;
  background-color: green;
}

.item_5 {
  grid-column: 5 / 6;
  grid-row: 1 / 2;
  background-color: greenyellow;
}

.item_6 {
  height: 100px;
  width: 100px;
  background-color: greenyellow;
}

.item-a {
  grid-area: header;
  background-color: lightcoral;
}
.item-b {
  grid-area: main;
  background-color: lightskyblue;
}
.item-c {
  grid-area: sidebar;
  background-color: magenta;
}
.item-d {
  grid-area: footer;
  background-color: olivedrab;
}

.container_areas {
  display: grid;
  grid-template-columns: 50px 50px 50px 180px;
  grid-template-rows: auto;
  grid-template-areas:
    'header header header header'
    'main main . sidebar'
    'footer footer footer footer';
  /* column-gap: 5px;
  row-gap: 5px; */
  gap: 10px 2px;
  border: 1px dotted blueviolet;
  justify-items: stretch;
}

.container_alignment {
  display: grid;
  grid-template: repeat(5, 100px) / repeat(5, 100px);
  /* gap: 10px 2px; */
  border: 1px dotted blueviolet;
  /* justify-content: center;
  align-content: end; */
  place-content: center end;
  /* justify-items: stretch;
  align-items: stretch; */
  place-items: center center; /*Align-items justify-items*/
}
ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  width: 200px;
  background-color: #f1f1f1;
}

li a {
  text-align: center;
  display: block;
  color: #000;
  padding: 8px 16px;
  text-decoration: none;
}

li a.active {
  background-color: #4caf50;
  color: white;
}

li a:hover:not(.active) {
  background-color: #555;
  color: white;
}

.container_auto {
  display: grid;
  grid-template-columns: 60px 60px;
  grid-template-rows: 100px 90px;
  border: crimson dashed 1px;
}

.item-x {
  grid-column: 1 / 2;
  grid-row: 2 / 3;
  background-color: blueviolet;
}
.item-y {
  grid-column: 5 / 6;
  grid-row: 2 / 3;
  background-color: chocolate;
}

.container_flow_row {
  display: grid;
  grid-template-columns: 60px 60px 60px 60px 60px;
  grid-template-rows: 30px 30px;
  grid-auto-flow: row;
  border: crimson dashed 1px;
}

.container_flow_column {
  display: grid;
  grid-template-columns: 60px 60px 60px 60px 60px;
  grid-template-rows: 30px 30px;
  grid-auto-flow: column;
  border: crimson dashed 1px;
}
.item-r {
  grid-column: 1;
  grid-row: 1 / 3;
  background-color: darkkhaki;
}
.item-v {
  grid-column: 5;
  grid-row: 1 / 3;
  background-color: darkorchid;
}

/*!Shorthands and equivalences*/
/* .container {
  grid: 100px 300px / 3fr 1fr;
}

.container {
  grid-template-rows: 100px 300px;
  grid-template-columns: 3fr 1fr;
} */
